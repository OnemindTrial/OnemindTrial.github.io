{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/course.service.ts","webpack:///src/app/courses.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/default-user-courses.ts","webpack:///src/app/default-users.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","materialModules","AngularMaterialModule","imports","routes","path","component","AppRoutingModule","forRoot","AppComponent","titleService","setTitle","appName","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","authenticatedUserFieldName","AuthService","users","loggedInUserIndex","username","password","authenticated","i","length","user","window","sessionStorage","setItem","loggedInUsername","getItem","removeItem","providedIn","ChatComponent","CourseService","courses","Map","userCourses","map","course","filter","value","userCourseIds","Set","courseId","console","log","Array","from","values","has","get","name","thumbnail","instructor","totalLessons","DashboardComponent","authService","router","courseService","enrolledCourses","suggestedCourses","pageTitleDelimiter","isLoggedIn","navigate","getLoggedInUser","getEnrolledCourses","getSuggestedCourses","getCourse","defaultUserCourses","currentLesson","defaultUsers","firstName","lastName","HomeComponent","LoginComponent","hidePassword","formGroup","required","invalid","markAllAsTouched","login","alert","hasError","onLogin","NavbarComponent","titleTokens","getTitle","split","trim","logout","SignupComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","// Copyright 2021, MaxCogito, Inc. All rights reserved\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst materialModules = [\n  CdkTreeModule,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatButtonToggleModule,\n  MatTreeModule,\n  OverlayModule,\n  PortalModule,\n  MatBadgeModule,\n  MatGridListModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatTooltipModule,\n  MatDialogModule,\n  MatProgressBarModule\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    ...materialModules\n  ],\n  exports: [\n    ...materialModules\n  ],\n})\nexport class AngularMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'dashboard', component: DashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public constructor(private titleService: Title) { \n    this.titleService.setTitle(`${environment.appName}`);\n  }\n\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    DashboardComponent,\n    NavbarComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { defaultUsers } from './default-users';\nimport { User } from './user';\n\nconst authenticatedUserFieldName: string = \"auth-user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private users : User[] = defaultUsers;\n  private loggedInUserIndex: number = -1;\n\n  constructor() { }\n\n  login(username: string, password: string) : boolean {\n    let authenticated = false;\n    for (let i = 0; i < this.users.length; i++) {\n      let user = this.users[i];\n      if (user.username === username) {\n        authenticated = user.password === password;\n      }\n      if (authenticated) {\n        this.loggedInUserIndex = i;\n        break;\n      }\n    }\n\n    if (authenticated) {\n      window.sessionStorage.setItem(authenticatedUserFieldName, username);\n      return true;\n    }\n\n    return false;\n  }\n\n  isLoggedIn(): boolean {\n    let loggedInUsername = window.sessionStorage.getItem(authenticatedUserFieldName);\n    if (loggedInUsername === null) {\n      return false;\n    }\n\n    // make sure the user details exists\n    for (let user of this.users) {\n      if (user.username === loggedInUsername) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getLoggedInUser(): User {\n    let loggedInUsername = window.sessionStorage.getItem(authenticatedUserFieldName);\n    for (let user of this.users) {\n      if (user.username === loggedInUsername) {\n        return user;\n      }\n    }\n    return null;\n  }\n\n  logout(): void {\n    window.sessionStorage.removeItem(authenticatedUserFieldName);\n    this.loggedInUserIndex = -1;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chat works!</p>\n","import { Injectable } from '@angular/core';\nimport { Course } from './course';\nimport { courses } from './courses';\nimport { defaultUserCourses } from './default-user-courses';\nimport { UserCourse } from './user-course';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n  private courses: Map<number,  Course> = new Map();\n  private userCourses: UserCourse[] = defaultUserCourses;\n\n  constructor() {\n    this.courses = new Map(courses.map(course => [course.id, course]));\n  }\n\n  getEnrolledCourses(username: string): UserCourse[] {\n    return this.userCourses.filter(value => value.username === username);\n  }\n\n  getSuggestedCourses(username: string): Course[] {\n    let userCourseIds = new Set<number>(this.userCourses.filter(value => value.username === username)\n      .map(value => value.courseId));\n    console.log(\"Courses\", this.courses);\n    console.log(\"UserCourses\", this.userCourses);\n    return Array.from(this.courses.values()).filter(value => !userCourseIds.has(value.id));\n  }\n\n  getCourse(courseId: number): Course {\n    return this.courses.get(courseId);\n  }\n}\n","import { Course } from \"./course\";\n\nexport const courses: Course[] = [\n    {\n        id: 1,\n        name: \"Multifamily Property Investing\",\n        thumbnail: \"assets/multifamily-investing.jpg\",\n        instructor: \"Zaynah Bob\",\n        totalLessons: 5\n    },\n    {\n        id: 2,\n        name: \"Intro to NFTs\",\n        thumbnail: \"assets/nft.jpg\",\n        instructor: \"Kennedy Burke\",\n        totalLessons: 13\n    },\n    {\n        id: 3,\n        name: \"Commercial Real Estate\",\n        thumbnail: \"assets/real-estate.jpg\",\n        instructor: \"Lorena Bone\",\n        totalLessons: 15\n    },\n    {\n        id: 4,\n        name: \"Value Investing\",\n        thumbnail: \"assets/value-investing.jpg\",\n        instructor: \"Rahul Frame\",\n        totalLessons: 9\n    },\n    {\n        id: 5,\n        name: \"Intro to Blockchain\",\n        thumbnail: \"assets/blockchain.jpg\",\n        instructor: \"Gabija Andrade\",\n        totalLessons: 18\n    },\n    {\n        id: 6,\n        name: \"Growth Investing\",\n        thumbnail: \"assets/growth-investing.jpg\",\n        instructor: \"Fox Church\",\n        totalLessons: 12\n    },\n    {\n        id: 7,\n        name: \"What is an option\",\n        thumbnail: \"assets/option-trading.jpg\",\n        instructor: \"Keanu Francis\",\n        totalLessons: 6\n    },\n    {\n        id: 8,\n        name: \"Shorting a Stock\",\n        thumbnail: \"assets/stock.jpg\",\n        instructor: \"Kade Guerrero\",\n        totalLessons: 3\n    },\n    {\n        id: 9,\n        name: \"All about Annual Reports\",\n        thumbnail: \"assets/annual-report.jpg\",\n        instructor: \"Raj Mccartney\",\n        totalLessons: 4\n    }\n]\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth.service';\nimport { Course } from '../course';\nimport { CourseService } from '../course.service';\nimport { UserCourse } from '../user-course';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  enrolledCourses: UserCourse[] = [];\n  suggestedCourses: Course[] = [];\n\n  constructor(private titleService: Title,\n    private authService: AuthService,\n    private router: Router,\n    private courseService: CourseService) {\n    this.titleService.setTitle(\n      `${environment.appName} ${environment.pageTitleDelimiter} Dashboard`);\n  }\n\n  ngOnInit(): void {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n    let user = this.authService.getLoggedInUser();\n    this.enrolledCourses = this.courseService.getEnrolledCourses(user.username);\n    this.suggestedCourses = this.courseService.getSuggestedCourses(user.username);\n    console.log(this.enrolledCourses);\n    console.log(this.suggestedCourses);\n  }\n\n  getCourse(courseId: number): Course {\n    return this.courseService.getCourse(courseId);\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"enrolled-courses-container courses-container\">\n        <p><strong>Your Courses</strong></p>\n        <div class=\"courses-carousel\">\n            <mat-card *ngFor=\"let enrolledCourse of enrolledCourses\">\n                <img mat-card-image src=\"{{ getCourse(enrolledCourse.courseId).thumbnail }}\" alt=\"{{ getCourse(enrolledCourse.courseId).name }}\">\n                <mat-card-footer>\n                    <p><strong>{{ getCourse(enrolledCourse.courseId).name }}</strong></p>\n                    <p>LED BY {{ getCourse(enrolledCourse.courseId).instructor }}</p>\n                    <p>Lesson {{enrolledCourse.currentLesson}} of {{ getCourse(enrolledCourse.courseId).totalLessons }}</p>\n                    <mat-progress-bar mode=\"determinate\" value=\"{{(enrolledCourse.currentLesson - 1) * 100 / getCourse(enrolledCourse.courseId).totalLessons }}\"></mat-progress-bar>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </div>\n    <div class=\"suggested-courses-container courses-container\">\n        <p><strong>How about these?</strong></p>\n        <div class=\"courses-carousel\">\n            <mat-card *ngFor=\"let suggestedCourse of suggestedCourses\">\n                <img mat-card-image src=\"{{ suggestedCourse.thumbnail }}\" alt=\"{{suggestedCourse.name}}\">\n                <mat-card-footer>\n                    <p><strong>{{ suggestedCourse.name }}</strong></p>\n                    <p>LED BY {{ suggestedCourse.instructor }}</p>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </div>\n</div>\n","import { UserCourse } from \"./user-course\";\n\nexport const defaultUserCourses : UserCourse[] = [\n    {\n        username: \"jacob\",\n        courseId: 2,\n        currentLesson: 10\n    },\n    {\n        username: \"jacob\",\n        courseId: 8,\n        currentLesson: 1\n    },\n    {\n        username: \"jacob\",\n        courseId: 6,\n        currentLesson: 7\n    },\n    {\n        username: \"jacob\",\n        courseId: 5,\n        currentLesson: 15\n    },\n    {\n        username: \"jacob\",\n        courseId: 1,\n        currentLesson: 3\n    },\n    {\n        username: \"jacob\",\n        courseId: 9,\n        currentLesson: 1\n    },{\n        username: \"daniel\",\n        courseId: 3,\n        currentLesson: 14\n    },\n    {\n        username: \"daniel\",\n        courseId: 1,\n        currentLesson: 2\n    }\n]\n","import { User } from \"./user\";\n\nexport const defaultUsers : User[] = [\n    {\n        firstName: \"Jacob\",\n        lastName: \"Goldschein\",\n        password: \"jacob\",\n        username: \"jacob\"\n    },\n    {\n        firstName: \"Daniel\",\n        lastName: \"Adu-Djan\",\n        password: \"daniel\",\n        username: \"daniel\"\n    }\n]\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private titleService: Title) {\n    this.titleService.setTitle(\n      `${environment.appName} ${environment.pageTitleDelimiter} Home`);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"content\">\n        <div class=\"blurb\">\n            <p><strong>On3mind</strong> is a financial education platform with courses provided by heavily vetted professionals.</p>\n        </div>\n        <div class=\"fields-container\">\n            <div class=\"field-container\">\n                <a href=\"#cryptocurrency\">\n                    <mat-card>\n                        <img mat-card-image src=\"assets/cryptocurrency.jpg\" alt=\"cryptocurrency\">\n                        <mat-card-footer><p>Cryptocurrency</p></mat-card-footer>\n                    </mat-card>\n                </a>\n            </div>\n            <div class=\"field-container\">\n                <a href=\"#investment\">\n                    <mat-card>\n                        <img mat-card-image src=\"assets/investment.jpg\" alt=\"investment\">\n                        <mat-card-footer><p>Investment</p></mat-card-footer>\n                    </mat-card>\n                </a>\n            </div>\n            <div class=\"field-container\">\n                <a href=\"#web3\">\n                    <mat-card>\n                        <img mat-card-image src=\"assets/web3.jpg\" alt=\"web3\">\n                        <mat-card-footer><p>Web3</p></mat-card-footer>\n                    </mat-card>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public hidePassword = true;\n  public formGroup: FormGroup;\n\n  constructor(private titleService: Title, private authService: AuthService, private router: Router) { \n    this.titleService.setTitle(\n      `${environment.appName} ${environment.pageTitleDelimiter} Log In`);\n    this.formGroup = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  public onLogin(): void {\n    if (this.formGroup.invalid) {\n      this.formGroup.markAllAsTouched();\n      return;\n    }\n\n    let username = this.formGroup.get('username').value;\n    let password = this.formGroup.get('password').value;  \n\n    if (this.authService.login(username, password)) {\n      this.router.navigate([\"/dashboard\"]);\n      return;\n    }\n\n    alert(\"Login failed\");\n  }\n\n  public getUsernameErrorMessage(): string {\n    if (this.formGroup.get('username').hasError('required')) {\n      return 'Please enter your email';\n    }\n  }\n\n  public getPasswordErrorMessage(): string {\n    if (this.formGroup.get('password').hasError('required')) {\n      return 'Please enter your password';\n    }\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"sign-in-section\">\n        <div class=\"sign-in-option-divider\">\n            <mat-divider></mat-divider>\n            <p>or</p>\n            <mat-divider></mat-divider>\n        </div>\n        <div>\n            <form class=\"sign-in-form\" [formGroup]=\"formGroup\">\n                <mat-form-field class=\"username-input-section\" appearance=\"outline\">\n                  <mat-label>Username</mat-label>\n                  <input type=\"text\" matInput [formControl]=\"formGroup.get('username')\">\n                  <mat-error *ngIf=\"formGroup.get('username').errors != null\">\n                    {{ getUsernameErrorMessage() }}\n                  </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"password-input-section no-margin\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput [formControl]=\"formGroup.get('password')\" [type]=\"hidePassword ? 'password' : 'text'\">\n                    <button mat-icon-button matSuffix (click)=\"hidePassword = !hidePassword\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hidePassword\">\n                        <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"formGroup.get('password').errors != null\">\n                        {{ getPasswordErrorMessage() }}\n                    </mat-error>\n                </mat-form-field>\n                <p class=\"password-reset-section no-margin\">Forgot password? <a>Reset</a></p>\n            </form>\n        </div>\n        <div>\n            <button class=\"main-sign-in-button\" (click)=\"onLogin()\">Log In</button>\n        </div>\n    </div>\n</div>\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService, private titleService : Title, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  userLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  getCurrentPageName(): string {\n    let titleTokens = this.titleService.getTitle().split(environment.pageTitleDelimiter);\n    if (titleTokens.length < 2) {\n      return titleTokens[0].trim();\n    }\n    return titleTokens[1].trim();\n  }\n\n  onLogout(): void {\n    this.authService.logout();\n    this.router.navigate([\"\"]);\n  }\n\n  getLoggedInUserFirstName(): string {\n    return this.authService.getLoggedInUser().firstName;\n  }\n\n}\n","<div class=\"navbar-container\">\n    <div class=\"org-container\">\n        <a href=\"\"><img src=\"assets/onemind-logo.png\" alt=\"logo\"></a>\n    </div>\n    <div class=\"nav-container\">\n        <a routerLink=\"/dashboard\">\n            <div [ngClass]=\"{'current-page': getCurrentPageName() === 'Dashboard'}\">\n                <mat-icon class=\"material-icons-outlined\">dashboard</mat-icon>\n                <p>Dashboard</p>\n            </div>\n        </a>\n        <div [ngClass]=\"{'current-page': getCurrentPageName() === 'Instructors'}\">\n            <mat-icon class=\"material-icons-outlined\">badge</mat-icon>\n            <p>Instructors</p>\n        </div>\n    </div>\n    <div class=\"auth-container\">\n        <div [ngClass]=\"{'current-page': getCurrentPageName() === 'Log In'}\" *ngIf=\"!userLoggedIn()\"><a routerLink=\"/login\">Log In</a></div>\n        <div [ngClass]=\"{'current-page': getCurrentPageName() === 'Sign Up'}\" *ngIf=\"!userLoggedIn()\"><a routerLink=\"/signup\">Sign Up</a></div>\n        <div class=\"logout-container\" *ngIf=\"userLoggedIn()\"><button (click)=\"onLogout()\">Logout</button></div> \n        <div class=\"account-container\" *ngIf=\"userLoggedIn()\"><a href=\"#account\"><p>Welcome <strong>{{ getLoggedInUserFirstName() }}!</strong></p></a></div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private titleService: Title) {\n    this.titleService.setTitle(\n      `${environment.appName} ${environment.pageTitleDelimiter} Sign Up`);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>signup works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  appName: \"Onemind\",\n  pageTitleDelimiter: \"-\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}