{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/course.service.ts","./src/app/courses.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/default-user-courses.ts","./src/app/default-users.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","// Copyright 2021, MaxCogito, Inc. All rights reserved\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst materialModules = [\n  CdkTreeModule,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatButtonToggleModule,\n  MatTreeModule,\n  OverlayModule,\n  PortalModule,\n  MatBadgeModule,\n  MatGridListModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatTooltipModule,\n  MatDialogModule,\n  MatProgressBarModule\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    ...materialModules\n  ],\n  exports: [\n    ...materialModules\n  ],\n})\nexport class AngularMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'dashboard', component: DashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public constructor(private titleService: Title) { \n    this.titleService.setTitle(`${environment.appName}`);\n  }\n\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-chat></app-chat>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    DashboardComponent,\n    NavbarComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { defaultUsers } from './default-users';\nimport { User } from './user';\n\nconst authenticatedUserFieldName: string = \"auth-user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private users : User[] = defaultUsers;\n  private loggedInUserIndex: number = -1;\n\n  constructor() { }\n\n  login(username: string, password: string) : boolean {\n    let authenticated = false;\n    for (let i = 0; i < this.users.length; i++) {\n      let user = this.users[i];\n      if (user.username === username) {\n        authenticated = user.password === password;\n      }\n      if (authenticated) {\n        this.loggedInUserIndex = i;\n        break;\n      }\n    }\n\n    if (authenticated) {\n      window.sessionStorage.setItem(authenticatedUserFieldName, username);\n      return true;\n    }\n\n    return false;\n  }\n\n  isLoggedIn(): boolean {\n    let loggedInUsername = window.sessionStorage.getItem(authenticatedUserFieldName);\n    if (loggedInUsername === null) {\n      return false;\n    }\n\n    // make sure the user details exists\n    for (let user of this.users) {\n      if (user.username === loggedInUsername) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getLoggedInUser(): User {\n    let loggedInUsername = window.sessionStorage.getItem(authenticatedUserFieldName);\n    for (let user of this.users) {\n      if (user.username === loggedInUsername) {\n        return user;\n      }\n    }\n    return null;\n  }\n\n  logout(): void {\n    window.sessionStorage.removeItem(authenticatedUserFieldName);\n    this.loggedInUserIndex = -1;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-icon matTooltip=\"Support\">chat</mat-icon>\n","import { Injectable } from '@angular/core';\nimport { Course } from './course';\nimport { courses } from './courses';\nimport { defaultUserCourses } from './default-user-courses';\nimport { UserCourse } from './user-course';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n  private courses: Map<number,  Course> = new Map();\n  private userCourses: UserCourse[] = defaultUserCourses;\n\n  constructor() {\n    this.courses = new Map(courses.map(course => [course.id, course]));\n  }\n\n  getEnrolledCourses(username: string): UserCourse[] {\n    return this.userCourses.filter(value => value.username === username);\n  }\n\n  getSuggestedCourses(username: string): Course[] {\n    let userCourseIds = new Set<number>(this.userCourses.filter(value => value.username === username)\n      .map(value => value.courseId));\n    console.log(\"Courses\", this.courses);\n    console.log(\"UserCourses\", this.userCourses);\n    return Array.from(this.courses.values()).filter(value => !userCourseIds.has(value.id));\n  }\n\n  getCourse(courseId: number): Course {\n    return this.courses.get(courseId);\n  }\n}\n","import { Course } from \"./course\";\n\nexport const courses: Course[] = [\n    {\n        id: 1,\n        name: \"Multifamily Property Investing\",\n        thumbnail: \"assets/multifamily-investing.jpg\",\n        instructor: \"Zaynah Bob\",\n        totalLessons: 5\n    },\n    {\n        id: 2,\n        name: \"Intro to NFTs\",\n        thumbnail: \"assets/nft.jpg\",\n        instructor: \"Kennedy Burke\",\n        totalLessons: 13\n    },\n    {\n        id: 3,\n        name: \"Commercial Real Estate\",\n        thumbnail: \"assets/real-estate.jpg\",\n        instructor: \"Lorena Bone\",\n        totalLessons: 15\n    },\n    {\n        id: 4,\n        name: \"Value Investing\",\n        thumbnail: \"assets/value-investing.jpg\",\n        instructor: \"Rahul Frame\",\n        totalLessons: 9\n    },\n    {\n        id: 5,\n        name: \"Intro to Blockchain\",\n        thumbnail: \"assets/blockchain.jpg\",\n        instructor: \"Gabija Andrade\",\n        totalLessons: 18\n    },\n    {\n        id: 6,\n        name: \"Growth Investing\",\n        thumbnail: \"assets/growth-investing.jpg\",\n        instructor: \"Fox Church\",\n        totalLessons: 12\n    },\n    {\n        id: 7,\n        name: \"What is an option\",\n        thumbnail: \"assets/option-trading.jpg\",\n        instructor: \"Keanu Francis\",\n        totalLessons: 6\n    },\n    {\n        id: 8,\n        name: \"Shorting a Stock\",\n        thumbnail: \"assets/stock.jpg\",\n        instructor: \"Kade Guerrero\",\n        totalLessons: 3\n    },\n    {\n        id: 9,\n        name: \"All about Annual Reports\",\n        thumbnail: \"assets/annual-report.jpg\",\n        instructor: \"Raj Mccartney\",\n        totalLessons: 4\n    }\n]\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth.service';\nimport { Course } from '../course';\nimport { CourseService } from '../course.service';\nimport { UserCourse } from '../user-course';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  enrolledCourses: UserCourse[] = [];\n  suggestedCourses: Course[] = [];\n\n  constructor(private titleService: Title,\n    private authService: AuthService,\n    private router: Router,\n    private courseService: CourseService) {\n    this.titleService.setTitle(\n      `${environment.appName} ${environment.pageTitleDelimiter} Dashboard`);\n  }\n\n  ngOnInit(): void {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n    let user = this.authService.getLoggedInUser();\n    this.enrolledCourses = this.courseService.getEnrolledCourses(user.username);\n    this.suggestedCourses = this.courseService.getSuggestedCourses(user.username);\n    console.log(this.enrolledCourses);\n    console.log(this.suggestedCourses);\n  }\n\n  getCourse(courseId: number): Course {\n    return this.courseService.getCourse(courseId);\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"enrolled-courses-container courses-container\">\n        <p><strong>Your Courses</strong></p>\n        <div class=\"courses-carousel\">\n            <mat-card *ngFor=\"let enrolledCourse of enrolledCourses\">\n                <img mat-card-image src=\"{{ getCourse(enrolledCourse.courseId).thumbnail }}\" alt=\"{{ getCourse(enrolledCourse.courseId).name }}\">\n                <mat-card-footer>\n                    <p><strong>{{ getCourse(enrolledCourse.courseId).name }}</strong></p>\n                    <p>LED BY {{ getCourse(enrolledCourse.courseId).instructor }}</p>\n                    <p>Lesson {{enrolledCourse.currentLesson}} of {{ getCourse(enrolledCourse.courseId).totalLessons }}</p>\n                    <mat-progress-bar mode=\"determinate\" value=\"{{(enrolledCourse.currentLesson - 1) * 100 / getCourse(enrolledCourse.courseId).totalLessons }}\"></mat-progress-bar>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </div>\n    <div class=\"suggested-courses-container courses-container\">\n        <p><strong>How about these?</strong></p>\n        <div class=\"courses-carousel\">\n            <mat-card *ngFor=\"let suggestedCourse of suggestedCourses\">\n                <img mat-card-image src=\"{{ suggestedCourse.thumbnail }}\" alt=\"{{suggestedCourse.name}}\">\n                <mat-card-footer>\n                    <p><strong>{{ suggestedCourse.name }}</strong></p>\n                    <p>LED BY {{ suggestedCourse.instructor }}</p>\n                </mat-card-footer>\n            </mat-card>\n        </div>\n    </div>\n</div>\n","import { UserCourse } from \"./user-course\";\n\nexport const defaultUserCourses : UserCourse[] = [\n    {\n        username: \"jacob\",\n        courseId: 2,\n        currentLesson: 10\n    },\n    {\n        username: \"jacob\",\n        courseId: 8,\n        currentLesson: 1\n    },\n    {\n        username: \"jacob\",\n        courseId: 6,\n        currentLesson: 7\n    },\n    {\n        username: \"jacob\",\n        courseId: 5,\n        currentLesson: 15\n    },\n    {\n        username: \"jacob\",\n        courseId: 1,\n        currentLesson: 3\n    },\n    {\n        username: \"jacob\",\n        courseId: 9,\n        currentLesson: 1\n    },{\n        username: \"daniel\",\n        courseId: 3,\n        currentLesson: 14\n    },\n    {\n        username: \"daniel\",\n        courseId: 1,\n        currentLesson: 2\n    }\n]\n","import { User } from \"./user\";\n\nexport const defaultUsers : User[] = [\n    {\n        firstName: \"Jacob\",\n        lastName: \"Goldschein\",\n        password: \"jacob\",\n        username: \"jacob\"\n    },\n    {\n        firstName: \"Daniel\",\n        lastName: \"Adu-Djan\",\n        password: \"daniel\",\n        username: \"daniel\"\n    }\n]\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private titleService: Title) {\n    this.titleService.setTitle(\n      `${environment.appName} ${environment.pageTitleDelimiter} Home`);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"content\">\n        <div class=\"blurb\">\n            <p><strong>On3mind</strong> is a financial education platform with courses provided by heavily vetted professionals.</p>\n        </div>\n        <div class=\"fields-container\">\n            <div class=\"field-container\">\n                <a href=\"#cryptocurrency\">\n                    <mat-card>\n                        <img mat-card-image src=\"assets/cryptocurrency.jpg\" alt=\"cryptocurrency\">\n                        <mat-card-footer><p>Cryptocurrency</p></mat-card-footer>\n                    </mat-card>\n                </a>\n            </div>\n            <div class=\"field-container\">\n                <a href=\"#investment\">\n                    <mat-card>\n                        <img mat-card-image src=\"assets/investment.jpg\" alt=\"investment\">\n                        <mat-card-footer><p>Investment</p></mat-card-footer>\n                    </mat-card>\n                </a>\n            </div>\n            <div class=\"field-container\">\n                <a href=\"#web3\">\n                    <mat-card>\n                        <img mat-card-image src=\"assets/web3.jpg\" alt=\"web3\">\n                        <mat-card-footer><p>Web3</p></mat-card-footer>\n                    </mat-card>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public hidePassword = true;\n  public formGroup: FormGroup;\n\n  constructor(private titleService: Title, private authService: AuthService, private router: Router) { \n    this.titleService.setTitle(\n      `${environment.appName} ${environment.pageTitleDelimiter} Log In`);\n    this.formGroup = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  public onLogin(): void {\n    if (this.formGroup.invalid) {\n      this.formGroup.markAllAsTouched();\n      return;\n    }\n\n    let username = this.formGroup.get('username').value;\n    let password = this.formGroup.get('password').value;  \n\n    if (this.authService.login(username, password)) {\n      this.router.navigate([\"/dashboard\"]);\n      return;\n    }\n\n    alert(\"Login failed\");\n  }\n\n  public getUsernameErrorMessage(): string {\n    if (this.formGroup.get('username').hasError('required')) {\n      return 'Please enter your email';\n    }\n  }\n\n  public getPasswordErrorMessage(): string {\n    if (this.formGroup.get('password').hasError('required')) {\n      return 'Please enter your password';\n    }\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"sign-in-section\">\n        <div class=\"sign-in-option-divider\">\n            <mat-divider></mat-divider>\n            <p>or</p>\n            <mat-divider></mat-divider>\n        </div>\n        <div>\n            <form class=\"sign-in-form\" [formGroup]=\"formGroup\">\n                <mat-form-field class=\"username-input-section\" appearance=\"outline\">\n                  <mat-label>Username</mat-label>\n                  <input type=\"text\" matInput [formControl]=\"formGroup.get('username')\">\n                  <mat-error *ngIf=\"formGroup.get('username').errors != null\">\n                    {{ getUsernameErrorMessage() }}\n                  </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"password-input-section no-margin\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput [formControl]=\"formGroup.get('password')\" [type]=\"hidePassword ? 'password' : 'text'\">\n                    <button mat-icon-button matSuffix (click)=\"hidePassword = !hidePassword\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hidePassword\">\n                        <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"formGroup.get('password').errors != null\">\n                        {{ getPasswordErrorMessage() }}\n                    </mat-error>\n                </mat-form-field>\n                <p class=\"password-reset-section no-margin\">Forgot password? <a>Reset</a></p>\n            </form>\n        </div>\n        <div>\n            <button class=\"main-sign-in-button\" (click)=\"onLogin()\">Log In</button>\n        </div>\n    </div>\n</div>\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService, private titleService : Title, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  userLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  getCurrentPageName(): string {\n    let titleTokens = this.titleService.getTitle().split(environment.pageTitleDelimiter);\n    if (titleTokens.length < 2) {\n      return titleTokens[0].trim();\n    }\n    return titleTokens[1].trim();\n  }\n\n  onLogout(): void {\n    this.authService.logout();\n    this.router.navigate([\"\"]);\n  }\n\n  getLoggedInUserFirstName(): string {\n    return this.authService.getLoggedInUser().firstName;\n  }\n\n}\n","<div class=\"navbar-container\">\n    <div class=\"org-container\">\n        <a href=\"\"><img src=\"assets/onemind-logo.png\" alt=\"logo\"></a>\n    </div>\n    <div class=\"nav-container\">\n        <a routerLink=\"/dashboard\">\n            <div [ngClass]=\"{'current-page': getCurrentPageName() === 'Dashboard'}\">\n                <mat-icon class=\"material-icons-outlined\">dashboard</mat-icon>\n                <p>Dashboard</p>\n            </div>\n        </a>\n        <div [ngClass]=\"{'current-page': getCurrentPageName() === 'Instructors'}\">\n            <mat-icon class=\"material-icons-outlined\">badge</mat-icon>\n            <p>Instructors</p>\n        </div>\n    </div>\n    <div class=\"auth-container\">\n        <div [ngClass]=\"{'current-page': getCurrentPageName() === 'Log In'}\" *ngIf=\"!userLoggedIn()\"><a routerLink=\"/login\">Log In</a></div>\n        <div [ngClass]=\"{'current-page': getCurrentPageName() === 'Sign Up'}\" *ngIf=\"!userLoggedIn()\"><a routerLink=\"/signup\">Sign Up</a></div>\n        <div class=\"logout-container\" *ngIf=\"userLoggedIn()\"><button (click)=\"onLogout()\">Logout</button></div> \n        <div class=\"account-container\" *ngIf=\"userLoggedIn()\"><a href=\"#account\"><p>Welcome <strong>{{ getLoggedInUserFirstName() }}!</strong></p></a></div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private titleService: Title) {\n    this.titleService.setTitle(\n      `${environment.appName} ${environment.pageTitleDelimiter} Sign Up`);\n  }\n\n  ngOnInit(): void {\n    alert(\"Not setup yet\");\n  }\n\n}\n","<p>signup works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  appName: \"Onemind\",\n  pageTitleDelimiter: \"-\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}